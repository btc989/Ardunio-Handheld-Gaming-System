#include <TFT.h>  // Arduino LCD library
#include <SPI.h>


#define cs   10
#define dc   9
#define rst  8
#define TFTscreenWidth 160
#define TFTscreenHeight 128

const byte PIN_BUTTON_RIGHT = 3;
const byte PIN_BUTTON_UP = 4;
const byte PIN_BUTTON_DOWN = 5;
const byte PIN_BUTTON_LEFT = 6;

const byte PIN_ANALOG_X = 0;
const byte PIN_ANALOG_Y = 1;

const int X_THRESHOLD_LOW = 505;
const int X_THRESHOLD_HIGH = 515;    

const int Y_THRESHOLD_LOW = 500;
const int Y_THRESHOLD_HIGH = 510;    

int x_position;
int y_position;

int x_direction;
int y_direction;

TFT TFTscreen = TFT(cs, dc, rst);

int headX = 0;
int headY = 0;
int bodyY = 0;
int bodyX = 0;
int oldbodyX = 0;
int oldbodyY = 0;
int oldheadX = 0;
int oldheadY = 0;
int MoveX = 1;
int MoveY = 1;
int Speed = 15;
int foodX = 0;
int foodY = 0;
int rando = 0;
int score = 0;
  
void setup() 
{
  Serial.begin(9600);
  TFTscreen.begin();
  TFTscreen.background(255, 255, 255); // fills the screen to white
  randomSeed(analogRead(3));
  beginSnake();
}

void loop() 
{
  int foodX;
  int foodY;
  int headX;
  int headY;
  if (millis() % Speed < 2) 
  {
    food(  foodX, foodY);
    movesnake(foodX, foodY);
  }
}
void beginSnake()
{
  if (headX > TFTscreen.width() || headX < 0) 
    {
      headX = 0;
    }
    if (headY > TFTscreen.height() || headY < 0) 
    {                                           // makes sure the head doesnt pass the wall
      headY = 0;
    }
    TFTscreen.rect(headX, headY, 4, 4);
    TFTscreen.fill(0, 0, 0); // makes the head black
    
}
void movesnake(int& foodX, int& foodY) 
{
  bool test=false;
  do 
  {
     int myWidth = TFTscreen.width();
     int myHeight = TFTscreen.height(); // sets screen dimentions

     headX = map(analogRead(A0), 0, 1023, 32, myWidth) - 20 ;
     headY = map(analogRead(A1), 0, 1023, 6, myHeight) - 5 ; // sets positon of snake head and pairs it with joystick

     TFTscreen.fill(255, 255, 255); 
  
     if (oldheadX != headX || oldheadY != headY) 
    {
      TFTscreen.rect(oldheadX, oldheadY, 4, 4); // deletes and creates the head as it moves
    }
  
    TFTscreen.fill(0, 0, 0); // makes the head black

    TFTscreen.rect(headX, headY, 4, 4);
    oldheadX = headX;
    oldheadY = headY; // pairs the old head and the new head
    
    test=eat(foodX,  foodY, headX, headY);
    Serial.println(test);
    
  }while(!test);
    
  Serial.println("We made out");
}

  void food(int& randoX, int& randoY) 
  {
    randoX = random(TFTscreen.width()+2);
    randoY= random(TFTscreen.height()+2);

    //Serial.println(randoX);
    //Serial.println("FLyffy bunny");
    //Serial.println(randoY);
  
    TFTscreen.rect(randoX, randoY, 4, 4);
    TFTscreen.fill (0, 0, 0);
  }

bool eat(int& foodX, int& foodY, int& headX, int& headY) 
{

  Serial.println(headX);
  Serial.println("Next");
  Serial.println(foodX);
  if (((headX == foodX) && (headY == foodY))) 
  {
    Serial.println("MWHAHA");
    int score = (score + 1);
   
    TFTscreen.background(255, 255, 255);
    return true;
    bod();
  }
  else 
    return false;
}

    void bod()
    {

    TFTscreen.rect(bodyX, bodyY, 4, 4);
    TFTscreen.fill(0, 0, 0); // makes the body black
    
       if (oldbodyX != bodyX || oldbodyY != bodyY) 
    {
      TFTscreen.rect(oldbodyX, oldbodyY, 4, 4); // deletes and creates the body as it moves
    }
  
    TFTscreen.fill(0, 0, 0); // makes the body black

    TFTscreen.rect(bodyX, bodyY, 4, 4);
    oldheadX = bodyX;
    oldheadY = bodyY; // pairs the old body and the new head
    }
